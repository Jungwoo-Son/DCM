FORMAT: 1A
HOST: https://polls.apiblueprint.org/

# DCM api

DCM의 백엔드 api를 제공합니다.

# Group 계정 관련
## Login [POST /login]
+ Attributes
    + id (string, required)
    + pw (string, required)
+ Request login (application/json)

        {
            "id": "asdf",
            "pw": "password"
        }

+ Response 200 (application/json)
    + Attribute
        + access_token (string) - jwt로 구성된 엑세스 토큰입니다.
    + Body
    
            {
                "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhY2Nlc3MgdG9rZW4iLCJuYW1lIjoiYXNkZiIsImV4cCI6MjUxNjIzOTAyMn0.aJX_LeuqItLwa2sG1ZKvyEgROeTE2zwIyS_C6yQMuTw"
            }


## Register [POST /register]
+ Attributes
    + id (string, required)
    + pw (string, required)
+ Request register (application/json)

        {
            "id": "asdf",
            "pw": "password"
        }
+ Response 200 (application/json)


# Group 유저 정보
## Users [/users]
### Get user [GET /users/{id}]
+ Parameters
    + id (string) - 유저 아이디

+ Response 200 (application/json)
    + Attributes
        + id (string) - 유저 아이디
        + name (string) - 유저 이름
        + contact (string) - 유저 연락처(전화번호, 이메일 등)
    + Body
    
            {
                "id": "asdf"
                "name": "손정우",
                "contact": "jungwoo9356@gmail.com"
            }


# Group 프로젝트
## Projects [/projects]
### Get project [GET /projects/{id}]
+ Response 200 (application/json)
### Create project [POST]
+ Response 200 (application/json)

# Group 유저 - 프로젝트
## Members [/projects/{id}/members]
### Get membsers [GET]
+ Response 200 (application/json)

## User's projects [/users/{id}/projects]
### List all user's projects [GET]
+ Response 200 (application/json)
### participate in a project [POST]
+ Response 200 (application/json)

# Group 프로젝트 구성 요소
## Components [/projects/{id}/components]
### List all components [GET]
+ Response 200 (application/json)
### Create a new component [POST]
+ Response 200 (application/json)
## dependences between components [/projects/{project_id}/components/{component_id}/dependencies]
### List all dependencies of the component [GET]
+ Response 200 (application/json)
### Create a new dependecy between components [POST]
+ Response 200 (application/json)
### DELETE the dependencies [DELETE /projects/{project_id}/components/{component_id}/dependencies/{object_id}]
+ Response 200 (application/json)